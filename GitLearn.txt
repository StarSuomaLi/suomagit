	添加一个文件到仓库中：
	git add <filename.ext>
同步一个或者一批文件到仓库中：
	git commit -m "说明 最好是本次
					同步的内容简介"
	git status 可以查看git当前的同步状态  但是看不到具体的区别

	git diff 可以查看git同步之前的具体代码差别
	
	git log 可以查看git的版本同步情况和历史 可以使用git log --pretty=onelin		e来对展示的版本信息进行美化 便于阅读

	git reflog可以查看版本变动后之前的最新版本的版本号 方便在回退错误后找回
	最新或当前版本之后的某个版本号

	git reset --hard HEAD^可以降版本回退到上一个版本 “^^”两个符号代表上上一		个版本 或者使用简写 HEAD~100 (意思是前100个版本)

	git reset --hard 版本号 直接到达对应的版本 版本号不用写全部 可以只输入前
	几位即可

	git diff HEAD -- <filename.ext>比较工作区中的文件和当前git版本中的已提交的版本不同

	git checkout -- <filename.ext> 取消目前工作去中所做的所有改动 还原到 最近的add 或者commit中

	git reset HEAD <filename> 撤销暂存区域中对应文件的add步骤

远程仓库命令：
	执行远程仓库命令之前需要确定你的github上的sshkey生成并且保存了  
	1.在仓库的终端输入  ssh-keygen -t -C "username" (注:username是你github上的用户名)
	2.一路回车  根据提示在默认路径下找到ssh文档  复制里边的ssh-sra到github的setting下
	粘贴到ssh框中 即可使用远程仓库的命令了 非常的方便

	在github上创建一个和本地git仓库同名的仓库 
	使用命令：git remote add origin git@github.com:用户名/仓库名.git
	然后通过命令 git push -u origin master 即可推送本地仓库中的文件到远程仓库中了
	首次推送需要加-u 将远程仓库的master和本地的master关联起来之后  之后所有的推送都
	可以直接使用git push origin master即可

	在github上新建仓库后，可以直接在本地克隆远程仓库 git clone git@github.com:username/	   respository_name.git 除了git远程的克隆远程命令之外 还可以这样写
	git clone https://github.com/username/respository_name.git

branch：删除分支：git branch -d branch_name
	
branch  分支  可以更安全方便的进行项目的推进  通过分支开发后合并到主分支中去
	创建分支：git branch branch_name 
	切换分支：git checkout branch_name
	合起来：git checkout -b branch_name
	合并分支到当前分支：git merge branch_name
	
	合并时有冲突的分支 会用 <<<<<<<<  ======= >>>>>>>分割  需要手动修改之后 add commit

	合并分支时可以使用 --no-ff 命令来使得分支被删除后仍然可以看到记录 
	git merge --no-ff -m "合并分支并留下记录" branch_name 
	可以通过 git log --graph --pretty=oneline --abbrev-commit 来查看分支历史图





